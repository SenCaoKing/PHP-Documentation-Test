<?php

	// 运算符优先级
	
	// 运算符优先级指定了两个表达式绑定得有多“紧密”。
	// 必要时可以用括号来强制改变优先级。
	
	// 如果运算符优先级相同，那运算符的结合方向决定了该如何运算。

	// 没有结合的相同优先级的运算符不能连在一起使用，例如 1 < 2 > 1 在PHP是不合法的。但另外一方面表达式 1 <= 1 == 1 是合法的, 因为 == 的优先级低于 <=。
	
	// 括号的使用，哪怕在不是必要的场合下，通过括号的配对来明确标明运算顺序，而非靠运算符优先级和结合性来决定，通常能够增加代码的可读性。
	
	#1 结合方向
	$a = 3 * 3 % 5;
	echo $a; // 4
	echo '<hr>';

	$a = true ? 0: true ? 1 : 2;
	echo $a; // 2
	echo '<hr>';

	$a = 1;
	$b = 2;
	$a = $b += 3;
	echo $a; // 5
	echo '<hr>';

	#2 Undefined order of evaluation
	$a = 1;
	echo $a + $a++;

	echo '<hr>';

	$i = 1;
	$artray[$i] = $i++;

	// 尽管 = 比其它大多数的运算符的优先级低，PHP 仍旧允许类似如下的表达式：if (!$a = foo())，在此例中 foo() 的返回值被赋给了 $a。
?>